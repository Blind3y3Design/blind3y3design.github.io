---
import Layout from '@layouts/Base.astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import BookPreview from '@components/BookPreview.astro';

const books = (await getCollection('bookshelf')).sort(
    (a, b) => b.data.completionDate.valueOf() - a.data.completionDate.valueOf()
);

const bookYears = new Map();
const years: number[] = [];

books.forEach((book) => {
    const year = book.data.completionDate.getFullYear();

    if (!bookYears.get(year)) {
        years.push(year);
        bookYears.set(year, []);
    }

    bookYears.get(year).push(book);
});

const {
    title = 'Bookshelf',
    description = "A catalog of books I've read over the years",
} = Astro.props;
---

<Layout title={title} description={description}>
    <main class="stack">
        <div class="page-intro | stack" data-size="xs">
            <h1 class="title">Bookshelf</h1>
            <p class="about-bio | fs-md text-cap-width">
                A catalog of books I've read over the years
            </p>
        </div>
        <div class="bookshelf-content | stack" data-size="small">
            {
                years.map((year) => {
                    const yearBooks = bookYears.get(year);

                    return (
                        <section class="year | stack" data-size="small">
                            <h2 class="year-title | block-highlight | fs-md">
                                {year.toString()}
                            </h2>
                            <ul class="book-list | flow-grid" data-repeat="5">
                                {yearBooks.map(
                                    (book: CollectionEntry<'bookshelf'>) => (
                                        // Some day maybe, use amazon images instead of local images
                                        // https://images-na.ssl-images-amazon.com/images/P/${book.data.amazonGuid}.jpg
                                        // Example:
                                        // https://images-na.ssl-images-amazon.com/images/P/B094PVB97X.jpg
                                        <BookPreview
                                            link={book.data.amazonLink}
                                            image={book.data.bookImage}
                                            title={book.data.title}
                                            subtitle={book.data.subtitle}
                                            author={book.data.bookAuthor}
                                            rating={book.data.bookRating}
                                            completionDate={
                                                book.data.completionDate
                                            }
                                        />
                                    )
                                )}
                            </ul>
                        </section>
                    );
                })
            }
        </div>
    </main>
</Layout>

<style>
    .year {
        --highlight-color: var(--surface-raised);

        &:first-of-type {
            --highlight-color: var(--accent-1);
        }

        &:nth-of-type(2) {
            --highlight-color: var(--accent-2);
        }

        &:nth-of-type(3) {
            --highlight-color: var(--accent-3);
        }

        &:nth-of-type(4) {
            --highlight-color: var(--accent-4);
        }

        &:nth-of-type(n + 5) {
            .highlight-year {
                color: var(--text-priamry);
            }
        }
    }

    .year-title {
        border-radius: var(--border-radius-s);
        display: block;
        padding: var(--space-half) var(--space-1);
        width: max-content;
    }
</style>
