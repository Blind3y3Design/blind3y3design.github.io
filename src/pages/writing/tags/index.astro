---
import Layout from '@layouts/Base.astro';
import { getCollection } from 'astro:content';
import SectionHeader from '@components/SectionHeader.astro';
import TagLink from '@components/TagLink.astro';
import OrphanTagLink from '@components/OrphanTagLink.astro';

const posts = (await getCollection('writing')).sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// const uniqueTags = [...new Set(posts.map((post) => post.data.tags).flat())];

interface uniqueTags {
    [key: string]: {
        count: number;
        title: string;
    };
}

let uniqueTags: uniqueTags = {};

posts.forEach((post) => {
    if (post.data.tags) {
        post.data.tags.forEach((tag) => {
            if (uniqueTags.hasOwnProperty(tag)) {
                uniqueTags[tag].count += 1;
            } else {
                uniqueTags[tag] = {
                    title: tag,
                    count: 1,
                };
            }
        });
    }
});

const orphanTags = Object.values(uniqueTags).filter((tag) => tag.count <= 1);
const soretdOrphanTags = Object.values(orphanTags).sort((a, b) =>
    a.title.localeCompare(b.title)
);
const filteredTags = Object.values(uniqueTags).filter((tag) => tag.count > 1);
const sortedUniqueTags = Object.values(filteredTags).sort(
    (a, b) => b.count - a.count
);
---

<Layout
    title="All Tags"
    description="A list of all the tags used in my writing"
>
    <main>
        <section class="blog-posts content-container">
            <div class="blog-posts__inner content-container__inner">
                <SectionHeader
                    title="Tags with Multiple Posts"
                    subtitle=""
                    sectionaccentcolor="accent-1"
                />
                <ul class="stack" data-size="xxs">
                    {
                        sortedUniqueTags.map((tag) => (
                            <li>
                                <TagLink tag={tag.title} count={tag.count} />
                            </li>
                        ))
                    }
                </ul>
            </div>
        </section>
        <section class="blog-posts content-container">
            <div class="blog-posts__inner content-container__inner">
                <SectionHeader
                    title="Orphan Tags"
                    subtitle="Tags with only 1 post"
                    sectionaccentcolor="accent-1"
                />
                <ul class="stack" data-size="xxs">
                    {
                        soretdOrphanTags.map((tag) => (
                            <li>
                                <OrphanTagLink tag={tag.title} />
                            </li>
                        ))
                    }
                </ul>
            </div>
        </section>
    </main>
</Layout>

<style>
    .blog-posts__inner {
        align-items: start;
        display: flex;
        flex-direction: column;
        gap: var(--space-4);
        justify-content: center;
    }
    ul {
        margin: 0;
        padding: 0;
    }

    li {
        list-style: none;
    }
</style>
