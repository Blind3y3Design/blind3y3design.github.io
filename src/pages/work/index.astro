---
import Layout from '@layouts/Base.astro';
import { getCollection } from 'astro:content';

import type { CollectionEntry } from 'astro:content';
import { Picture } from 'astro:assets';
import FormattedDate from '@components/FormattedDate.astro';

const posts = (await getCollection('work')).sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const { title = 'Work', description = "Work I've done throughout my career" } =
    Astro.props;
---

<Layout title={title} description={description}>
    <main class="stack | theme-work">
        <div class="page-intro | stack" data-size="xs">
            <h1 class="title">{title}</h1>
            <p class="fs-md text-secondary text-cap-width">
                I've been lucky to work on a diverse range of projects,
                including international and multi-lingual marketing campaigns,
                e-commerce experiences, education-focused products, and design
                systems.
            </p>
        </div>
        <ul class="post-list">
            {posts.map(
                    (post: CollectionEntry<'work'>) => (
                    <li class="work-preview | stack" data-size="xxs">
                        <a href={`/work/${post.slug}/`} class="link" tabindex="-1">
                            <Picture
                                class="image"
                                src={post.data.heroImage}
                                formats={['avif', 'webp']}
                                alt={post.data.title}
                            />
                        </a>
                        <a href={`/work/${post.slug}/`} class="link">
                            <p class="title | fs-md">{post.data.title}</p>
                        </a>
                        <p class="date | fs-sm">
                            <FormattedDate date={post.data.pubDate} />
                        </p>
                        {post.data.excerpt && <p class="excerpt">{post.data.excerpt}</p>}
                    </li>
                )
            )}
        </ul>
    </main>
</Layout>

<style>
    .link {
        color: var(--link-color);

        text-decoration: underline;
        text-decoration-color: transparent;
        text-decoration-skip-ink: auto;
        text-decoration-thickness: 2px;
        text-underline-offset: 0ex;
        transition: all 0.25s ease-in-out;

        &:hover,
        &:focus-visible {
            text-decoration: underline;
            text-decoration-color: var(--link-color);
            text-decoration-skip-ink: auto;
            text-decoration-thickness: 2px;
            text-underline-offset: 0.2ex;
        }
    }

    .title {
        align-items: first baseline;
        display: flex;
        gap: var(--space-half);
    }

    .link-icon {
        height: 0.75em;
        width: 0.75em;
    }

    .date {
        color: var(--text-secondary);
    }

    .image {
        aspect-ratio: 2/1;
        border-radius: 12px;
        grid-column: 1;
        margin-block-end: 8px;
        object-fit: cover;
        object-position: top center;

        @media (min-width: 600px) {
            margin: 0;
        }
    }

    .excerpt {
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 3;
        overflow: hidden;
    }
</style>
