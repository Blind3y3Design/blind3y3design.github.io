<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Blog | Blind3y3Design]]></title>
  <link href="http://blind3y3design.github.io/blog/categories/blog/atom.xml" rel="self"/>
  <link href="http://blind3y3design.github.io/"/>
  <updated>2015-05-07T19:46:06-04:00</updated>
  <id>http://blind3y3design.github.io/</id>
  <author>
    <name><![CDATA[Adam Sedwick]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The #Talkpay Hashtag]]></title>
    <link href="http://blind3y3design.github.io/blog/2015/05/03/building-a-better-team/"/>
    <updated>2015-05-03T22:55:00-04:00</updated>
    <id>http://blind3y3design.github.io/blog/2015/05/03/building-a-better-team</id>
    <content type="html"><![CDATA[<p>Something interesting happened on twitter this week. The #Talkpay hastag went viral. This sparked a number of conversations I had with my peers. On the <a href="http://www.designerhangout.co/">User Experience Design</a> Slack channel we spent a good while talking about the idea, and it&rsquo;s potential ramifications or benefits to the community. So, let&rsquo;s #Talkpay.</p>

<!--more-->


<p>So what exactly is #Talkpay all about? I&rsquo;ll let the woman behind the hashtag describe.</p>

<blockquote><p>Pay inequality is an oft-discussed topic. There are measurable pay discrepancies between groups when looking at race and gender which are further exacerbated when someone is a member of multiple minorities. One need only look at the statistics that show black women making $0.64 to white men’s $1.00 and Latinas making $0.53. <a href="http://www.newrepublic.com/article/121530/women-color-make-far-less-78-cents-mans-dollar">These discrepancies exist in a very profound and measurable way</a> across all manner of fields and experiences.</p>

<p> -Lauren Voswinkel | <a href="https://modelviewculture.com/news/lets-talk-about-pay">Lets Talk About Pay</a></p></blockquote>

<p>If you want more information I would advise going and reading Lauren&rsquo;s full article. The idea behind the hashtag was to bring awareness to the issue of pay discrepancy and try to begin an open conversation about the issue. As I said before the issue blossomed very quickly among the tech community I call myself part of. I was amazed at just how open people were about this and how most of us seemed to have the same opinion.</p>

<p>I have personally been on both sides of the wage gap. My first job out of college was working as a barista at a Starbucks in my college town. It still amazes me how people seem to think that just because you work an hourly job that you&rsquo;re a lesser person. For this reason I still believe that everyone should spend at least some time working an hourly job; preferably some form of customer service. My first &ldquo;real&rdquo; job was as a Jr. Front-End developer at an advertising agancy. As someone pretty fresh out of school I was amazed at the amount of money that I was making. More than enough to pay bills and student loans while living under my parent roof.</p>

<p>I had an idea of what my coworkers were making and due to their experience I felt the pay differnce was justified. It was not until I moved out to New York City that I truly experienced the ugly side of the pay gap. My first job in New York was as a Front-End Engineer at an enterprise software company. I was only making slightly more than I had been before, but now I was living on my own and in one of the most expensive cities in the US. I was still making enough to get by, but now I had to begin thinking about budgets and expenses. My fiance on the otherhand was working 40 hours a week on a minimum wage salary, barely making enough to cover half of the rent each month.</p>

<p>I&rsquo;ve also worked had the pleasure of working with some amazing women in my field, one being a very dear friend of mine. While looking for new positions we began to discuss our compensation. She had been with the company three years, while i&rsquo;d been there only 9 months. We were making about the same amount. There was even a meeting that took place where we were told she deserved a promotion, but they didn&rsquo;t want to give it to her because she might use it to find work elsewhere.</p>

<p>The reason I&rsquo;m writing about all of this is because I think this is a real and undeniable issue in the work force. Part of the solution is to have a discussion about these issues and bring awareness to the wage gap. I also think that having more open and available salary information is part of the solution. Making the discussion of salaries taboo only serves to protect companies that are paying less based on discriminatory grounds. If you think that open salaries is an opening for chaos to take control all you have to do is reaserch the topic a bit to see thats not what happens. There is a wonderfull <a href="http://www.ted.com/talks/ricardo_semler_radical_wisdom_for_a_company_a_school_a_life?embed=true">TED Talk</a> about it that was featured on NPR&rsquo;s <a href="http://www.npr.org/2015/04/24/401742828/what-happens-when-you-run-a-company-with-almost-no-rules">TED Radio Hour</a>.</p>

<p>I feel very lucky to be where I am in my career now. I know that I&rsquo;ve gotten amazing opportunities in my life, I just want to see everyone else get those opportunities too. Maybe one day everyone will be on an even playing ground, but until then we need to at least be aware of the issues and try to avoid making these mistakes ourselves.</p>

<p>Keep building better.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Great Divide]]></title>
    <link href="http://blind3y3design.github.io/blog/2015/04/25/Bridging-the-Gap/"/>
    <updated>2015-04-25T23:40:00-04:00</updated>
    <id>http://blind3y3design.github.io/blog/2015/04/25/Bridging-the-Gap</id>
    <content type="html"><![CDATA[<h2>Bridging the ‘Handoff’</h2>

<p><a href="http://uxreactions.com">uxreactions.com</a>
While I appreciate a lot of what is on the site, I must say; seeing the number of developer complaints make me very sad. I also noticed this trend at a recent meetup I attended. A large number of designers; UX, visual, IxD, voiced a number of complaints about developers. I’ve heard the same from developers about designers. I think this is an artifact of traditional waterfall approaches and the ‘hand off’.<!--more--> If we want to grow as teams and communities I think we need to stop complaining about each other and finding ways to bridge the gap. Sometimes an overly decorative design really does affect performance, and a slow experience is a poor experience.</p>

<p>One of the worst offenders of this point of view is the <a href="http://clientsfromhell.net/">clients from hell</a> blog. More often than not, the issue is not the client. It’s the designer not providing clear instruction and having a feeling of entitlement that puts them above the client.</p>

<p>I’ve also noticed that a number of thought leaders in this area have found their success by getting their teams to work together. Ethan Marcotte and Karen McGrane; the host of the<a href="http://responsivewebdesign.com/podcast/">responsive web design</a> podcast, interview team members to often speak very highly of their counterparts, be it design or development.</p>

<p>Some of the best teams I’ve gotten to experience work in a very close manner. I believe the popular term form them teams right now is a ‘lean’ team. These teams work together to produce the best product, the design team understand the underlying structure of how the web works. Developers can not only give input on design decisions but are often invited into design reviews. In my experience this cooperation produces better results and happier teams.</p>

<p>Keep building better.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scrum and the Agile Philosophy]]></title>
    <link href="http://blind3y3design.github.io/blog/2014/06/12/Scrum-And-The-Agile-Philosophy/"/>
    <updated>2014-06-12T06:44:00-04:00</updated>
    <id>http://blind3y3design.github.io/blog/2014/06/12/Scrum-And-The-Agile-Philosophy</id>
    <content type="html"><![CDATA[<p>Developing our own Agile process is something that we should take pride in. We can take bits and pieces from frameworks and create something that works for our team. The point is not to go whole hog in to a single framework and force the team to work inside the constraints predefined for a different team.</p>

<!--more-->


<h2>The Origin of Agile</h2>

<p>When most people hear the term Agile Development they instantly think of something specific. Unfortunately this is an issue of implicit vs explicit meaning. In it&rsquo;s very nature Agile Development is nothing more than a way of thinking. The philosophy was originally developed in 2001 by a group of programmers who believed the current way of working (the traditional waterfall) was flawed and that there had to be a better solution. This group came together and wrote the Agile Manifesto.</p>

<h3>The Principles of Agile</h3>

<ul>
<li>Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.</li>
<li>Welcome changing requirements, even late in development. Agile processes harness change for  the customer&rsquo;s competitive advantage.</li>
<li>Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.</li>
<li>Business people and developers must work together daily throughout the project.</li>
<li>Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.</li>
<li>The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.</li>
<li>Working software is the primary measure of progress.</li>
<li>Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.</li>
<li>Continuous attention to technical excellence and good design enhances agility.</li>
<li>Simplicity&ndash;the art of maximizing the amount of work not done&ndash;is essential.</li>
<li>The best architectures, requirements, and designs emerge from self-organizing teams.</li>
<li>At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.</li>
</ul>


<h2>The Definition of Scrum</h2>

<blockquote><p>Scrum (n): A framework within which people can address complex adaptive problems, while productively and creatively delivering products of the highest possible value.</p></blockquote>

<p>Scrum is:
+ Lightweight
+ Simple to understand
+ Difficult to master</p>

<p>Scrum is a process framework that has been used to manage complex product development since the early 1990s. Scrum is not a process or a technique for building products; rather, it is a framework within which you can employ various processes and techniques. Scrum makes clear the relative efficacy of your product management and development practices so that you can improve.</p>

<p>The Scrum framework consists of Scrum Teams and their associated roles, events, artifacts, and rules. Each component within the framework serves a specific purpose and is essential to Scrum’s success and usage.</p>

<p>The rules of Scrum bind together the events, roles, and artifacts, governing the relationships and interaction between them.</p>

<h2>Creating our own Agile Process</h2>

<p>Developing our own Agile process is something that we should take pride in. We can take bits and pieces from frameworks and create something that works for our team. The point is not to go whole hog in to a single framework and force the team to work inside the constraints predefined for a different team.</p>

<p>Normally the first step I would suggest is to begin planning on a smaller scale; fortunately we already do this. The weekly &ldquo;resourcing&rdquo; that we do lends itself well to the Agile philosophy. In most cases a sprint is defined as a one to two week period of time that has been scoped out and a roadmap has been set for the team. This is where the wheels fall off of our wagon.</p>

<h3>- Resourcing:</h3>

<p>The current way we do resourcing is by assigning someone &ldquo;x&rdquo; hours for project &ldquo;y&rdquo;. In order for us to move forward as a team this has to change. All scoping and planning for sprints should be task based. Task &ldquo;x, y and z&rdquo; need to be completed for project &ldquo;q&rdquo; this week. This allows the team to focus on concrete goals for completion and gives a much needed sense of accomplishment to the developers. Resourcing and progress tracking based on tasks also allows for more accurate status updates. If someone is resourced 10 hours on a project and runs into a particularly stubborn issue they may take 20 hours for that project, but what actually got done? It&rsquo;s much more clear is that person is resourced task &ldquo;x, y and z&rdquo;, that way if they complete task &ldquo;x&rdquo; and get stuck on task &ldquo;y&rdquo; we can see the progress that was made. If any tasks from the current sprint are not completed it is much easier to understand why; it also sets the groundwork for the next sprint, all unfinished tasks are rolled over and set as priority one for the next sprint.</p>

<h3>- Progress Tracking:</h3>

<p>Now that we&rsquo;ve covered resourcing we can move on to the next step. This is also something that we have implemented to some degree. That is the standup; our version of the Daily Scrum.</p>

<p>The Daily Scrum is a 15-minute time-boxed event for the Development Team to synchronize activities and create a plan for the next 24 hours. This is done by inspecting the work since the last Daily Scrum and forecasting the work that could be done before the next one. The Daily Scrum is held at the same time and place each day to reduce complexity. During the meeting, the Development Team members explain:</p>

<ul>
<li>What did I do yesterday that helped the Development Team meet the Sprint Goal?</li>
<li>What will I do today to help the Development Team meet the Sprint Goal?</li>
<li>Do I see any impediment that prevents me or the Development Team from meeting the Sprint Goal?</li>
</ul>


<p>With the implementation of proper sprints we will easily be able to talk about the progress towards the Spring Goal.</p>

<h3>- Review and Retrospective:</h3>

<p>Something that we do not really focus on as a team is a review of our progress. Much of this can be attributed to the fact that we don&rsquo;t track our progress in a good way. By implementing the tools mentioned above we can improve upon this and it will enable us to review the progress we have made and talk about adapting the process in order to become more efficient.</p>

<h3>- The Sprint Review:</h3>

<p>A Sprint Review is held at the end of the Sprint to inspect the Increment and adapt the Product Backlog if needed. During the Sprint Review, the Scrum Team and stakeholders collaborate about what was done in the Sprint. Based on that and any changes to the Product Backlog during the Sprint, attendees collaborate on the next things that could be done to optimize value. This is an informal meeting, not a status meeting, and the presentation of the Increment is intended to elicit feedback and foster collaboration.</p>

<h3>- The Sprint Retrospective:</h3>

<p>The Sprint Retrospective occurs after the Sprint Review and prior to the next Sprint Planning. This is a three-hour time-boxed meeting for one-month Sprints. For shorter Sprints, the event is usually shorter. The Scrum Master ensures that the event takes place and that attendants understand its purpose. The Scrum Master teaches all to keep it within the time-box. The Scrum Master participates as a peer team member in the meeting from the accountability over the Scrum process.</p>

<p>The goal of the Reviews and Retrospectives is to:</p>

<p>Look back at the previous scrum and go over what has been completed. (Rev)
Look back at the previous scrum and go over what has not been completed. (Rev)
Discuss any issues that the team ran in to trying to reach the Sprint Goals. (Rev)
Display the completed items from the previous sprint and answer any questions from the stakeholders. (Rev)
Collaborate on what should be done in the next sprint, providing a baseline for the next sprint planing session. (Rev)
Review the timeline, budget, and potential capabilities for the project. (Rev)
Inspect how the last Sprint went with regards to people, relationships, process, and tools. (Retro)
Identify and order the major items that went well and potential improvements. (Retro)
Create a plan for implementing improvements to the way the Scrum Team does its work. (Retro)</p>

<h2>Conclusion</h2>

<p>I believe that by implementing, adapting and iterating on the processes listed above that our team will grow and become much more successful in the future. With a better process we will be able to develop our products more quickly and be able to take on larger projects. We will also be able to onboard new team members in a smoother fashion so that they can understand what we are doing and what is expected of them.</p>

<p>As always feedback is always appreciated and encouraged.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Designing a Workflow and Team Dynamic.]]></title>
    <link href="http://blind3y3design.github.io/blog/2014/06/08/Designing-A-Team-Dynamic-And-Workflow/"/>
    <updated>2014-06-08T12:06:00-04:00</updated>
    <id>http://blind3y3design.github.io/blog/2014/06/08/Designing-A-Team-Dynamic-And-Workflow</id>
    <content type="html"><![CDATA[<p>The idea behind designing a single workflow is that at any time someone else should be able to jump in to your workflow and know where in the process you are and pick up after you in needed.</p>

<!--more-->


<p>In our current development cycle this is imperative because we have people being added to and moved from one project to another on a regular basis. Ideally this would not be the case, but until we can fix that issue we can at lease alleviate some of the stress by setting up a unified workflow.</p>

<p>In order to do this we re going to set up some standards and best practices. One of these items is the standard operating procedure and it will be visable for anyone who has access to confluence. We will define these standards together as a collaborative effort so that they best fit the needs of the team as a whole.</p>

<p>A large portion of the new workflow will be the use of JIRA and CONFLUENCE as tools to enhance our productivity. We will use JIRA to outline all tasks to be done whether it is a bug or a new feature to be added. If you are doing something it should be associated with a ticket in JIRA. Confluence is a giant knowledge base. We will use it to hold all sort of useful information, from who is the tech load for a specific client to setting up a new environment or even just simple links to an useful or interesting article.</p>

<p>Atlassian an also has a product called hip chat that I will be looking into in the coming days. It works much like instant messaging and irc combined in to one. There is 1to1 chat and persistent group chat. This will be a great way for the teams to communicate with each other as well as allowing instant communication with another team member without the need to traverse the maze of desks.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blind3y3Design Version 0.0.1]]></title>
    <link href="http://blind3y3design.github.io/blog/2014/01/08/Blind3y3Design-Is-Live/"/>
    <updated>2014-01-08T22:07:00-05:00</updated>
    <id>http://blind3y3design.github.io/blog/2014/01/08/Blind3y3Design-Is-Live</id>
    <content type="html"><![CDATA[<p>Yay! We&rsquo;re up and running using <a href="http://jekyllrb.com/">Jekyll</a>. It took some time and has quite a learning curve, but if you&rsquo;re even remotely comfortable with the command line and you want to create a &ldquo;simple, blog-aware static site&rdquo; then it could be the thing for you.</p>

<!--more-->


<p>I am by no means a command line guru, and before Jekyll I had never used any markdown language. In just two days I got up and running using Jekyll to set this up. The biggest thing that drew me to using Jekyll was that I wanted to set up a workflow using <a href="http://nodejs.org/">node</a>, <a href="http://gruntjs.com/">grunt</a>, and <a href="http://sass-lang.com/">sass</a>. Once I installed ruby and set up my grunt stack I realized that it would take more work to version my site before I could push it through FTP to my web host. With Jekyll I could set up a site on <a href="http://pages.github.com/">Github Pages</a> and my version control would be built in to site contruction and deployment.</p>

<p>I have had quite a lot of fun setting everything up and learning more about the command line and how to use these new technologies.</p>

<p>Big thanks to the creators of <a href="http://jekyllrb.com/">Jekyll</a> <a href="https://github.com/qrush">@Nick Quaranto</a> and <a href="https://github.com/mojombo">@Tom Preston-Werner</a></p>

<p>Thanks for reading!</p>
]]></content>
  </entry>
  
</feed>
